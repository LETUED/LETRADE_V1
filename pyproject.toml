[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "letrade-v1"
version = "0.1.0"
description = "Production-grade automated cryptocurrency trading system"
authors = [
    {name = "Letrade Team", email = "dev@letrade.com"}
]
readme = "README.md"
requires-python = ">=3.11"
keywords = ["cryptocurrency", "trading", "automation", "bot"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # 핵심 라이브러리
    "ccxt>=4.0.0",              # 거래소 API 통합
    "pandas>=2.0.0",            # 데이터 처리
    "pandas-ta>=0.3.14b",       # 기술적 분석 지표
    "numpy>=1.24.0",            # 수치 계산
    "sqlalchemy>=2.0.0",        # ORM
    "alembic>=1.12.0",          # 데이터베이스 마이그레이션
    "psycopg2-binary>=2.9.0",   # PostgreSQL 어댑터
    
    # 메시지 버스
    "pika>=1.3.0",              # RabbitMQ 클라이언트
    "celery>=5.3.0",            # 분산 작업 큐
    "redis>=4.5.0",             # Redis 클라이언트
    
    # 웹 프레임워크 (CLI API용)
    "fastapi>=0.100.0",         # 고성능 웹 프레임워크
    "uvicorn[standard]>=0.22.0", # ASGI 서버
    
    # CLI 및 유틸리티
    "click>=8.1.0",             # CLI 프레임워크
    "rich>=13.0.0",             # 터미널 UI
    "python-telegram-bot>=20.0", # 텔레그램 봇
    
    # 설정 관리
    "pydantic>=2.0.0",          # 설정 검증
    "python-dotenv>=1.0.0",     # 환경 변수 관리
    "pyyaml>=6.0.0",            # YAML 설정 파일
    
    # 로깅 및 모니터링
    "structlog>=23.0.0",        # 구조화된 로깅
    "prometheus-client>=0.17.0", # 메트릭 수집
    
    # 암호화 및 보안
    "cryptography>=41.0.0",     # 암호화
    "google-cloud-secret-manager>=2.16.0", # GCP Secret Manager
    
    # 스케줄링
    "apscheduler>=3.10.0",      # 작업 스케줄러
    
    # 데이터 검증
    "cerberus>=1.3.0",          # 스키마 검증
    
    # 시간 처리
    "pytz>=2023.3",             # 시간대 처리
    "python-dateutil>=2.8.0",   # 날짜 파싱
]

[project.optional-dependencies]
dev = [
    # 테스트 도구
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    
    # 코드 품질
    "black>=23.7.0",            # 코드 포맷터
    "flake8>=6.0.0",            # 린터
    "mypy>=1.5.0",              # 타입 체커
    "isort>=5.12.0",            # import 정렬
    
    # 개발 도구
    "pre-commit>=3.3.0",        # Git 훅
    "jupyter>=1.0.0",           # Jupyter 노트북
    "ipython>=8.14.0",          # 향상된 REPL
]

prod = [
    # 프로덕션 전용
    "gunicorn>=21.2.0",         # WSGI 서버
    "sentry-sdk>=1.29.0",       # 에러 트래킹
]

ml = [
    # 머신러닝 (Week 3용)
    "scikit-learn>=1.3.0",
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "gym>=0.29.0",
]

[project.scripts]
letrade = "src.cli.main:main"
bot-cli = "src.cli.bot_cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "performance: Performance tests",
    "database: Database integration tests",
    "messagebus: Message bus integration tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]